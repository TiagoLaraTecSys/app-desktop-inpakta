@mixin col-base() {
	box-sizing: border-box;
	padding: 0 $grid-gutter;
}
@mixin generate-cols($breakpoint) {
	@include cols($breakpoint);
	@include cols-offset($breakpoint);
	@include cols-position($breakpoint);
}
@mixin cols($breakpoint) {
	@for $i from 0 through $qtd-col {
		$size: $i / $qtd-col * 100%;
		@if $i == 0 {
			%col-#{$breakpoint} {
				@include col-base;
				flex-basis: 0;
				flex-grow: 1;
				max-width: 100%;
			}

			.col-#{$breakpoint} {
				@extend %col-#{$breakpoint};
			}
		} @else {
			%col-#{$breakpoint}-#{$i} {
				@include col-base;
				flex-basis: $size;
				max-width: $size;
			}

			.col-#{$breakpoint}-#{$i} {
				@extend %col-#{$breakpoint}-#{$i};
			}
		}
	}
}
@mixin cols-offset($breakpoint) {
	@for $i from 0 through $qtd-col {
		$size: $i / $qtd-col * 100%;
		$margin: $size;
		@if $size == 0% {
			$margin: 0;
		}

		%offset-#{$breakpoint}-#{$i} {
			@include col-base;
			@if $margin != 100% {
				margin-left: $margin;
			}
		}

		.offset-#{$breakpoint}-#{$i} {
			@extend %offset-#{$breakpoint}-#{$i};
		}
	}
}
@mixin cols-position($breakpoint) {
	%start-#{$breakpoint} {
		justify-content: flex-start;
		text-align: start;
	}

	.start-#{$breakpoint} {
		@extend %start-#{$breakpoint};
	}

	%center-#{$breakpoint} {
		justify-content: center;
		text-align: center;
	}

	.center-#{$breakpoint} {
		@extend %center-#{$breakpoint};
	}

	%end-#{$breakpoint} {
		justify-content: flex-end;
		text-align: end;
	}

	.end-#{$breakpoint} {
		@extend %end-#{$breakpoint};
	}

	%top-#{$breakpoint} {
		align-items: flex-start;
	}

	.top-#{$breakpoint} {
		@extend %top-#{$breakpoint};
	}

	%middle-#{$breakpoint} {
		align-items: center;
	}

	.middle-#{$breakpoint} {
		@extend %middle-#{$breakpoint};
	}

	%bottom-#{$breakpoint} {
		align-items: flex-end;
	}

	.bottom-#{$breakpoint} {
		@extend %bottom-#{$breakpoint};
	}

	%around-#{$breakpoint} {
		justify-content: space-around;
	}

	.around-#{$breakpoint} {
		@extend %around-#{$breakpoint};
	}

	%between-#{$breakpoint} {
		justify-content: space-between;
	}

	.between-#{$breakpoint} {
		@extend %between-#{$breakpoint};
	}

	%first-#{$breakpoint} {
		order: -1;
	}

	.first-#{$breakpoint} {
		@extend %first-#{$breakpoint};
	}

	%last-#{$breakpoint} {
		order: 1;
	}

	.last-#{$breakpoint} {
		@extend %last-#{$breakpoint};
	}

	%order-default-#{$breakpoint} {
		order: 0;
	}

	.order-default-#{$breakpoint} {
		@extend %order-default-#{$breakpoint};
	}
}

%container-fluid {
	margin: 0 auto;
}

.container-fluid {
	@extend %container-fluid;
}

%container {
	margin: 0 auto;
}

.container-lg,
.container-md,
.container-ph,
.container-sm {
	margin: 0 auto;
}

.container {
	@extend %container;
}

%row {
	display: flex;
	flex: 0 1 auto;
	flex-direction: row;
	flex-wrap: wrap;
	box-sizing: border-box;
	margin: {
		left: -$grid-gutter;
		right: -$grid-gutter;
	}

	&.reverse {
		flex-direction: row-reverse;
	}
}

.row {
	@extend %row;
}

%col.reverse {
	flex-direction: column-reverse;
}

.col.reverse {
	@extend %col.reverse;
}
@include generate-cols(xs);
@media only screen and(min-width: $ph) {
	.container-ph {
		width: $ph;
	}

	%container-ph {
		width: $ph;
	}

	%container {
		@extend %container-ph;
	}
	@include generate-cols(ph);
}
@media only screen and(min-width: $sm) {
	.container-ph,
	.container-sm {
		width: $sm;
	}

	%container-sm {
		width: $sm;
	}

	%container,
	%container-ph {
		@extend %container-sm;
	}
	@include generate-cols(sm);
}
@media only screen and(min-width: $md) {
	.container-md,
	.container-ph,
	.container-sm {
		width: $md;
	}

	%container-md {
		width: $md;
	}

	%container,
	%container-ph,
	%container-sm {
		@extend %container-md;
	}
	@include generate-cols(md);
}
@media only screen and(min-width: $lg) {
	.container-lg,
	.container-md,
	.container-ph,
	.container-sm {
		width: $lg;
	}

	%container-lg {
		width: $lg;
	}

	%container,
	%container-md,
	%container-ph,
	%container-sm {
		@extend %container-lg;
	}
	@include generate-cols(lg);
}
